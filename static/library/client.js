const cleanupUrlString=path=>path.replace(/^\/|\/$/g,"").replace(/\/+/g,"/");const API=(base="https://api.gdquest.com/1")=>({claps:{async add(amount,url){const response=await fetch(`${base}/claps/add/${amount}/${cleanupUrlString(url)}`);return await response.json();},async get(url){const response=await fetch(`${base}/claps/get/${cleanupUrlString(url)}`);return await response.json();}},newsletter:{async subscribe(email,name){const formData=new FormData;formData.append("email",email);formData.append("name",name);formData.append("json","true");const response=await fetch(`${base}/newsletter`,{method:"POST",body:formData});return await response.json();}}});const env={API_URL:"https://api.gdquest.com/1"};Object.entries(env).forEach(([key,value])=>{if(!value){throw new Error(`\`${key}\` is not defined`);}});const{API_URL}=env;const htmlBooleanAttributes=["allowfullscreen","async","autofocus","autoplay","checked","controls","default","defer","disabled","formnovalidate","inert","ismap","itemscope","loop","multiple","muted","nomodule","novalidate","open","playsinline","readonly","required","reversed","selected","shadowrootclonable","shadowrootdelegatesfocus","shadowrootserializable"];const htmlBooleanAttributesSet=new Set(htmlBooleanAttributes);const isHTMLBooleanAttribute=value=>htmlBooleanAttributesSet.has(value);const kebabize=str=>str.replace(/[A-Z]+(?![a-z])|[A-Z]/g,($,ofs)=>(ofs?"-":"")+$.toLowerCase());const escapeReplacements={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"};const other={escapeTest:/[&<>"']/,escapeReplace:/[&<>"']/g,escapeTestNoEncode:/[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/,escapeReplaceNoEncode:/[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/g};const getEscapeReplacement=ch=>escapeReplacements[ch];function escapeHTML(html,encode){if(encode){if(other.escapeTest.test(html)){return html.replace(other.escapeReplace,getEscapeReplacement);}}else{if(other.escapeTestNoEncode.test(html)){return html.replace(other.escapeReplaceNoEncode,getEscapeReplacement);}}return html;}const protoOf=Object.getPrototypeOf;const objProto=protoOf({});const isObject=value=>typeof value==="object"&&protoOf(value)===objProto;const createElementDom=(tagName,...props)=>{const element=document.createElement(tagName);const[attributes,...children]=isObject(props[0]||props[0]==null)?props:[null,...props];attributes&&Object.entries(attributes).forEach(([k,v])=>{if(typeof v==="function"){const fn=v;if(k.startsWith("on")){const listener=fn;const event=k.slice(2).toLowerCase();element.addEventListener(event,listener);}else{fn(element,k);}}else if(k.startsWith("aria")){const property="aria-"+kebabize(k.slice(4));element.setAttribute(property,v+"");}else if(k.startsWith("data")){const property="data-"+kebabize(k.slice(4));element.setAttribute(property,v+"");}else if(k==="className"||k==="class"){const classValue=v;if(classValue==null||classValue===false){return;}if(Array.isArray(classValue)){const classes=classValue.flat(Infinity).filter(Boolean);element.classList.add(...classes);}else{if(classValue.includes(" ")){throw new Error("Invalid class name: "+v);}element.classList.add(v+"");}}else if(k==="props"){const propsValue=v;Object.entries(propsValue).forEach(([prop,value])=>{element[prop]=value;});}else if(v===false&&isHTMLBooleanAttribute(k)){return;}else if(k==="style"){if(typeof v==="string"){element.setAttribute("style",escapeHTML(v));}else{const styleValue=v;return Object.entries(styleValue).forEach(([prop,value])=>element.style.setProperty(prop,value+""));}}else{element.setAttribute(k,v+"");}});children&&children.map(c=>c!=null&&c!==false&&element.append(Array.isArray(c)?createElementDom(...c):typeof c==="string"||typeof c==="number"?document.createTextNode(c+""):typeof c==="function"?c(document.createTextNode(""),"textContent")??"":c));return element;};const createElementTemplate=(createElement,tagName,baseAttributes)=>{return(attributes,...children)=>{return createElement(tagName,baseAttributes!=null?{...baseAttributes,...attributes}:attributes,...children);};};const createElementsProxy=(createElement,methods)=>{const cache=new Map;return new Proxy(createElement,{get(_target,prop){const tagName=prop.toString();if(methods&&tagName in methods){return methods[tagName];}if(cache.has(tagName)){return cache.get(tagName);}if(typeof tagName==="string"&&isValidHTMLTag(tagName)){const elementCreator=createElementTemplate(createElement,tagName);cache.set(tagName,elementCreator);return elementCreator;}return undefined;}});};const isValidHTMLTag=tagName=>{return typeof document!=="undefined"?document.createElement(tagName) instanceof HTMLElement:/^[a-z][a-z0-9-]*$/i.test(tagName);};const appendChildren=(parent,...children)=>{children.flat(Infinity).forEach(child=>{if(child==null||child===false){return;}parent.append(child);});};const h=createElementsProxy(createElementDom,{add:appendChildren});const debounce=(fn,delay=250)=>{let debounceTimeOut;return()=>{clearTimeout(debounceTimeOut);debounceTimeOut=setTimeout(()=>{fn();},delay);};};const getClampedRandomInt=(max,min=0)=>Math.floor(Math.random()*(max-min+1))+min;const pathRegex=/^(?:(?<protocol>\w+):\/)?\/*(?<dir>.+\/)?(?<filename>(?<basename>.+?)(?:\.(?<extension>\w+))?)$/;const getFileTypeFromExtension=extension=>{if(extension==null){return"directory";}switch(extension.toLowerCase()){case"gd":return"gdscript";case"tscn":return"scene";case"png":case"jpg":case"gif":return"image";case"ini":case"text":case"yaml":case"txt":return"text";default:return"file";}};const DEFAULT_REGEX_VALUES={protocol:"",dir:"",filename:"",basename:"",extension:""};const splitPathStringToParts=path=>{path=path.replace(/^\/+/,"");const{protocol:_protocol,dir,filename,basename,extension}=path.match(pathRegex)?.groups??DEFAULT_REGEX_VALUES;const dirname=dir!=null?dir.replace(/\/+$/,"").split("/"):[];const incomplete=typeof _protocol==="undefined";const protocol=_protocol??"res";const fullPath=[dir,filename].filter(Boolean);const href=[protocol,...dirname,filename].filter(Boolean);const fileType=getFileTypeFromExtension(extension);const parts={href,fullPath,dirname,filename,protocol,basename,extension,fileType,incomplete};return parts;};const SKIP=Symbol("SKIP");Symbol("CANCEL");Symbol("ABORT");const identity=value=>value;const Signal=(value,{transform=identity}={})=>{const listeners=new Set;const on=fn=>{listeners.add(fn);return signal;};const off=fn=>{listeners.delete(fn);return signal;};const set=newValue=>{const derivedValue=transform(newValue,value,SKIP);if(derivedValue===SKIP||derivedValue===value){return signal;}const oldValue=value;value=derivedValue;listeners.forEach(fn=>fn(value,oldValue));return signal;};const get=()=>value;const signal={on,off,set,get};return signal;};const MapSignal=(value,{transform=identity}={})=>{const signal=Signal(value,{transform});const listenersForAdditions=new Set;const listenersForRemovals=new Set;const listenersForChange=new Set;const setItem=(key,value)=>{const oldData=signal.get();const newData={...oldData,[key]:value};signal.set(newData);if(!(key in oldData)){listenersForAdditions.forEach(fn=>fn(key,value));}else if(oldData[key]===value){return;}else{listenersForChange.forEach(fn=>fn(key,value,oldData[key]));}};const getItem=key=>signal.get()[key];const hasItem=key=>key in signal.get();const removeItem=key=>{const oldData=signal.get();if(!(key in oldData)){return;}const{[key]:_delete,...newData}=oldData;listenersForRemovals.forEach(fn=>fn(key,oldData[key]));signal.set(newData);};const onKeyAdded=fn=>listenersForAdditions.add(fn);const offKeyAdded=fn=>listenersForAdditions.delete(fn);const onKeyRemoved=fn=>listenersForRemovals.add(fn);const offKeyRemoved=fn=>listenersForRemovals.delete(fn);const onKeyChanged=fn=>listenersForChange.add(fn);const offKeyChanged=fn=>listenersForChange.delete(fn);return{...signal,setItem,getItem,hasItem,removeItem,onKeyAdded,offKeyAdded,onKeyRemoved,offKeyRemoved,onKeyChanged,offKeyChanged};};const LocalStorageSignalAdapter=(signal,localStorageKey)=>{const value=JSON.parse(localStorage.getItem(localStorageKey)||JSON.stringify(signal.get()));signal.set(value);signal.on(value=>localStorage.setItem(localStorageKey,JSON.stringify(value)));return signal;};const TYPE_SUCCESS="success";const TYPE_ERROR="error";const TYPE_INFO="info";const TYPE_WARNING="warning";const makeUserMessagesCollection=()=>{const signal=LocalStorageSignalAdapter(MapSignal({}),"__userMessages");const add=(type,message,id)=>{id=id||`usermessage-`+type+"-"+Math.random().toString(36).slice(2);signal.setItem(id,{message,type});return id;};const addSuccess=message=>add(TYPE_SUCCESS,message);const addError=message=>add(TYPE_ERROR,message);const addInfo=message=>add(TYPE_INFO,message);const addWarning=message=>add(TYPE_WARNING,message);const remove=id=>signal.removeItem(id);const get=id=>signal.getItem(id);const entries=()=>Object.entries(signal.get());return{add,addSuccess,addError,addInfo,addWarning,remove,get,entries,onMessageAdded:signal.onKeyAdded,onMessageRemoved:signal.onKeyRemoved,offMessageAdded:signal.offKeyAdded,offMessageRemoved:signal.offKeyRemoved};};let _cache=null;const userMessagesCollection=()=>{if(!_cache){_cache=makeUserMessagesCollection();}return _cache;};const toURLParams=values=>(values instanceof FormData?Array.from(values.entries()):Object.entries(values)).map(([k,v])=>Array.isArray(v)?v.map(vv=>`${k}=${encodeURIComponent(vv)}`).join("&"):typeof v==="string"||typeof v==="number"?`${k}=${encodeURIComponent(v)}`:typeof v==="boolean"?`${k}=${v?"true":"false"}`:`${k}=${encodeURIComponent(JSON.stringify(v))}`).join("&");const disableForm=form=>{let length=form.elements.length;while(length--){const control=form.elements[length];if("disabled"in control){control.disabled=true;}}};const enableForm=form=>{let length=form.elements.length;while(length--){const control=form.elements[length];if("disabled"in control){control.disabled=false;}}};const handleSimpleFormSubmit=callback=>event=>{event.preventDefault();event.stopPropagation();const form=event.target;const action=form.getAttribute("action")||"";const formName=form.getAttribute("name")||"";const enctype=form.getAttribute("enctype")||"";const method=(form.getAttribute("method")||"").toUpperCase();const target=form.getAttribute("target")||"";const values=new FormData(form);const serialized={name:formName,action,method,values,enctype,target};callback(serialized,form);};const pickCorrectFetch=(type,serialized)=>{if(type==="AUTO"){type=serialized.method||"GET";}switch(type){case"JSON":{const json=JSON.stringify(serialized.values);return fetch(serialized.action,{method:serialized.method,body:json,headers:{"Content-Type":"application/json","Accept":"application/json"}});}case"GET":{const params=serialized.values?toURLParams(serialized.values):"";const url=`${serialized.action}${params?"?"+params:""}`;return fetch(url,{method:serialized.method,headers:{"Accept":"application/json"}});}}const enctype=serialized.enctype&&serialized.enctype==="multipart/form-data"?"multipart/form-data":"application/x-www-form-urlencoded";const body=serialized.values?enctype==="multipart/form-data"?serialized.values:toURLParams(serialized.values):"";return fetch(serialized.action,{method:serialized.method,body,headers:{"Content-Type":enctype,"Accept":"application/json"}});};const defaultConfig={method:"AUTO",classBusy:"busy",doDisableForm:true,doReEnableForm:true};const autoFetchWhenSubmit=(config=defaultConfig)=>{const{method,classBusy,doDisableForm,doReEnableForm,callback}={...defaultConfig,...config};const useSerializedData=(serialized,form)=>{const promise=pickCorrectFetch(method,serialized);doDisableForm&&disableForm(form);classBusy&&form.classList.add(classBusy);if(callback!=null){promise.then(response=>callback(null,response)).catch(error=>callback(error,null));}promise.finally(()=>{doReEnableForm&&enableForm(form);classBusy&&form.classList.remove(classBusy);});return promise;};return handleSimpleFormSubmit(useSerializedData);};const _classCache=new Set;function processDomElementOnce(selectors,functor,addedClass){addedClass=addedClass||`js-processed-${functor.name?functor.name:selectors.replaceAll(/[^a-zA-Z0-9]/g,"-")}`;let n=1;while(_classCache.has(addedClass)&&n<1e3){addedClass=addedClass+n++;}_classCache.add(addedClass);const elements=document.querySelectorAll(selectors);if(!elements||!elements.length){return;}elements.forEach(element=>{if(!element.classList.contains(addedClass)){element.classList.add("isJSProcessed",addedClass);functor(element);}});}const onScrollStopped=(fn,checkInterval=150,root)=>{let timer=-1;const target=root??globalThis;const onScroll=()=>{clearTimeout(timer);timer=setTimeout(()=>{fn();target.removeEventListener("scroll",onScroll);},checkInterval);};target.addEventListener("scroll",onScroll,{passive:true});};const getElementRelativePosition=(element,scrollableParent)=>{const parentRect=scrollableParent.getBoundingClientRect();const elementRect=element.getBoundingClientRect();const relativeDimensions={top:elementRect.top-parentRect.top,left:elementRect.left-parentRect.left,right:elementRect.right-parentRect.left,bottom:elementRect.bottom-parentRect.top,width:elementRect.width,height:elementRect.height,parentHeight:parentRect.height,parentWidth:parentRect.width};return relativeDimensions;};const isRelativePositionPartiallyWithinParent=relative=>relative.bottom>0&&relative.bottom<relative.parentHeight;const scrollIntoViewIfPartiallyVisible=(element,scrollableParent)=>{const relative=getElementRelativePosition(element,scrollableParent);const isPartiallyVisible=isRelativePositionPartiallyWithinParent(relative);if(isPartiallyVisible){return false;}if(relative.top<0){scrollableParent.scrollTop+=relative.top;}else{scrollableParent.scrollTop+=relative.top-relative.parentHeight+relative.height;}return true;};const api=API(API_URL);const{button}=h;class ToggleShowEvent extends Event{isShown;controls;isHidden;constructor(isShown,controls,eventInitDict){super("toggler-toggleshow",eventInitDict);this.isShown=isShown;this.controls=controls;this.controls=controls;this.isHidden=!isShown;}}function toggleButton(){const expanded=this.getAttribute("aria-expanded")==="true";this.setAttribute("aria-expanded",expanded?"false":"true");const targetElementID=this.getAttribute("aria-controls");const targetElement=targetElementID?document.getElementById(targetElementID):null;if(!targetElement){return;}const targetToggledClassName=this.dataset["toggledClass"];if(targetToggledClassName){if(expanded){targetElement.classList.remove(targetToggledClassName);}else{targetElement.classList.add(targetToggledClassName);}const event=new ToggleShowEvent(!expanded,targetElement);this.dispatchEvent(event);}const bodyClassName=this.dataset["bodyClass"];if(bodyClassName){if(expanded){document.body.classList.remove(bodyClassName);}else{document.body.classList.add(bodyClassName);}}}const processTogglerButton=button=>{if(!button||!(button.tagName==="BUTTON")){return;}if(!button.dataset["toggledClass"]){button.dataset["toggledClass"]="isToggled";}button.addEventListener("click",toggleButton);if(button.dataset["startExpanded"]!=null&&button.dataset["startExpanded"]!==button.getAttribute("aria-expanded")){button.click();}};processDomElementOnce("button[data-is='toggler-button']",processTogglerButton);const{button:button1,img,li,span}=h;const currentProps={ariaCurrent:"true",ariaDisabled:"true"};const timerTime=8e3;const setupCarousel=carouselWrapper=>{const slider=carouselWrapper.querySelector(".carouselSlidesList");if(!slider){return;}const slides=Array.from(slider.querySelectorAll(".carouselSlidesListSlide")).map(slide=>{const category=slide.querySelector("h4")?.textContent??"";const title=slide.querySelector("h2")?.textContent??"";const thumbnail=slide.querySelector("img")?.src??"";return{category,title,thumbnail};});const controller=(()=>{const liveRegion=carouselWrapper.querySelector(".carouselLiveRegion");let currentSlide=Math.ceil(slider.scrollLeft/slider.offsetWidth)%slides.length;const nextSlide=()=>updateSlider((currentSlide+1)%slides.length);const prevSlide=()=>updateSlider((currentSlide-1+slides.length)%slides.length);const updateSlider=nextSlide=>{if(nextSlide===currentSlide){return;}slideButtons[currentSlide]?.setCurrent(false);slideButtons[nextSlide]?.setCurrent(true);currentSlide=nextSlide;slider.scrollLeft=slider.offsetWidth*currentSlide;if(liveRegion){liveRegion.textContent=`Item ${currentSlide+1} of ${slides.length}`;}};return{nextSlide,prevSlide,updateSlider,get currentSlide(){return currentSlide;}};})();handlePause:{const isReduced=globalThis.matchMedia(`(prefers-reduced-motion: reduce)`)!=null&&globalThis.matchMedia(`(prefers-reduced-motion: reduce)`).matches===true;if(isReduced){break handlePause;}const pauseToggleButton=carouselWrapper.querySelector(".carouselControlsButtonPlayToggle");const pauseToggleButtonTextElement=pauseToggleButton?.querySelector("span");if(!pauseToggleButton||!pauseToggleButtonTextElement){break handlePause;}let pauseInterval=null;let pauseRequested=false;const setPauseButton=isPaused=>{if(!isPaused){pauseToggleButton.classList.remove("buttonPlay");pauseToggleButton.classList.add("buttonPause");pauseToggleButtonTextElement.textContent="Pause";}else{pauseToggleButtonTextElement.textContent="Play";pauseToggleButton.classList.remove("buttonPause");pauseToggleButton.classList.add("buttonPlay");}};const startTimer=()=>{clearInterval(pauseInterval);if(pauseRequested){return;}pauseInterval=setInterval(controller.nextSlide,timerTime);carouselWrapper.style.setProperty("--timer-time",`${8e3}ms`);carouselWrapper.style.setProperty("--timer-animation-name","carouselProgressAnimation");};const stopTimer=()=>{carouselWrapper.style.setProperty("--timer-time","0ms");carouselWrapper.style.setProperty("--timer-animation-name","none");clearInterval(pauseInterval);pauseInterval=null;};pauseToggleButton.addEventListener("click",()=>{if(!pauseRequested){setPauseButton(true);pauseRequested=true;stopTimer();}else{pauseRequested=false;setPauseButton(false);}});startTimer();setPauseButton(false);carouselWrapper.addEventListener("mouseenter",stopTimer);carouselWrapper.addEventListener("mouseleave",startTimer);carouselWrapper.addEventListener("focusin",stopTimer);carouselWrapper.addEventListener("focusout",startTimer);}const slideButtons=(()=>{const carouselSlidesNavigationContainer=carouselWrapper.querySelector(".carouselSlidesNavigation");if(!carouselSlidesNavigationContainer){return[];}const currentSlideAnnouncer=span({class:"carouselSlideButtonCurrentTextAnnouncer"},"(Current Slide)");const slideButtons=slides.map((slide,index)=>{const isCurrent=index===controller.currentSlide;const slideButton=button1({class:"carouselSlidesNavigationButton",...isCurrent?currentProps:{}},span({class:"carouselSlidesNavigationButtonLabel"},span({class:"carouselSlidesNavigationButtonLabelCategory"},slide.category),span({class:"carouselSlidesNavigationButtonLabelTitle"},slide.title)),img({class:"carouselSlidesNavigationButtonThumbnail",src:slide.thumbnail,alt:"",ariaHidden:"true"}),isCurrent&&currentSlideAnnouncer);slideButton.addEventListener("click",()=>controller.updateSlider(index));carouselSlidesNavigationContainer.appendChild(li(null,slideButton));slideButton.setCurrent=isCurrent=>{if(isCurrent){slideButton.setAttribute("aria-current","true");slideButton.setAttribute("aria-disabled","true");slideButton.setAttribute("disabled","true");slideButton.append(currentSlideAnnouncer);}else{slideButton.removeAttribute("aria-current");slideButton.removeAttribute("aria-disabled");slideButton.removeAttribute("disabled");}};return slideButton;});return slideButtons;})();setupNextPrevButtons:{carouselWrapper.querySelector(".buttonPrevious")?.addEventListener("click",controller.prevSlide);carouselWrapper.querySelector(".buttonNext")?.addEventListener("click",controller.nextSlide);}};document.querySelectorAll("section.carouselWrapper").forEach(setupCarousel);const pathname=cleanupUrlString(new URL(globalThis.location.href).pathname);const createConfetti=()=>{const randomRotationAngle=getClampedRandomInt(360)+"deg";const particlesContainer=document.createElement("span");particlesContainer.dataset.is="confetti";particlesContainer.addEventListener("animationend",()=>particlesContainer.remove());particlesContainer.style.transform=`rotate(${randomRotationAngle})`;let children=getClampedRandomInt(10,5);particlesContainer.classList.add(`has-${children+1}`);while(children-- >=0){const particle=document.createElement("span");particle.style.setProperty("--angle",getClampedRandomInt(25)+"deg");particle.style.setProperty("--destination",getClampedRandomInt(55,5)+"px");particlesContainer.appendChild(particle);}return particlesContainer;};const getClapsOrRandom=()=>api.claps.get(pathname).then(amount=>amount).catch(e=>{console.error(e);return getClampedRandomInt(2e3,3e3);});getClapsOrRandom().then(initialAmount=>{const clapsOnPage=new Set;const initialFormattedAmount=formatNumber(initialAmount);const claps=Signal(initialAmount);const clapped=Signal(0);const setClapButtonAmount=(amount,formattedAmount)=>([total,abbreviated,bubble])=>{total.textContent=`${amount}`;abbreviated.textContent=formattedAmount;bubble.textContent=clapped.get()>0?`+${clapped.get()}`:"";};const setAmount=amount=>{const formattedAmount=formatNumber(amount);clapsOnPage.forEach(setClapButtonAmount(amount,formattedAmount));};function increase(){this.setAttribute("aria-pressed","true");clapped.set(clapped.get()+1);claps.set(claps.get()+1);this.label.appendChild(createConfetti());}function formatNumber(number=0){return number.toLocaleString("en-US",{maximumFractionDigits:2,notation:"compact",compactDisplay:"short"});}processDomElementOnce("button.clapsButton",button=>{const total=button.querySelector(".clapsButtonAmountTotal");const abbreviated=button.querySelector(".clapsButtonAmountAbbreviated");const bubble=button.querySelector(".clapsButtonBubble");const label=button.querySelector(".clapsButtonLabel");if(!total||!abbreviated||!bubble||!label){return;}const cache=[total,abbreviated,bubble];clapsOnPage.add(cache);setClapButtonAmount(initialAmount,initialFormattedAmount)(cache);button.addEventListener("animationend",event=>{if(event.animationName==="clapTotal"){button.setAttribute("aria-pressed","false");}});button.label=label;button.addEventListener("click",increase);});clapped.on(debounce(()=>{api.claps.add(clapped.get(),pathname);},1e3));claps.on(setAmount);});function unclickButton(button){button.setAttribute("aria-pressed","false");}function onclipboardButtonClick(_event){const value=this.getAttribute("data-clipboard");const clipboard=value==="currentURL"||value==null?globalThis.location.href:value;navigator.clipboard.writeText(clipboard);this.setAttribute("aria-pressed","true");setTimeout(()=>unclickButton(this),2e3);}const processClipboardButton=button=>{button.addEventListener("click",onclipboardButtonClick);};processDomElementOnce("button[data-is='clipboard-button']",processClipboardButton);const{add,span:span1,wbr}=h;const classPrefix="fileInText";const splitHTMLElementTextContent=holderElement=>{const pathStr=holderElement.textContent;if(pathStr==null||pathStr===""){holderElement.remove();return;}const fileOnly=holderElement.dataset["fileOnly"]==="true";const pathParts=splitPathStringToParts(pathStr);let recipient=holderElement;if(fileOnly){const label=span1({class:`${classPrefix}Label`},pathParts.filename);holderElement.textContent="";recipient=span1({class:`${classPrefix}Tooltip`});add(holderElement,label,recipient);}recipient.textContent="";holderElement.classList.add(`${classPrefix}-${pathParts.fileType}`);add(recipient,span1({class:`${classPrefix}Protocol`},pathParts.protocol),span1({class:`${classPrefix}Slash`},"://"),pathParts.dirname.length>0?pathParts.dirname.map(chunk=>[span1({class:`${classPrefix}Directory`},chunk),span1({class:`${classPrefix}Slash`},"/"),wbr()]):undefined,pathParts.filename&&span1({class:`${classPrefix}File`},pathParts.filename));};document.querySelectorAll('[data-is="file-in-text"]').forEach(splitHTMLElementTextContent);document.querySelectorAll(".codeBlockFileName").forEach(splitHTMLElementTextContent);const{add:add1,button:button2}=h;function onRevealButtonClick(){const shouldOpen=this.getAttribute("aria-expanded")!=="true";if(shouldOpen){this.setAttribute("aria-expanded","true");this.content.removeAttribute("aria-hidden");this.caption.removeAttribute("data-closed");}else{this.setAttribute("aria-expanded","false");this.content.setAttribute("aria-hidden","true");this.caption.setAttribute("data-closed","");}}const makeRevealButton=(summary,details)=>{if(!details||!summary){return;}const id=details.id||`collapsible-${Math.random().toString(36).slice(2)}`;if(!details.id){details.id=id;}const isOpen=summary.hasAttribute("data-open")&&summary.getAttribute("data-open")==="true";const revealBtn=Object.assign(button2({class:"collapsibleRevealButton",ariaExpanded:isOpen?"true":"false",ariaControls:id,ariaLabel:"Toggle content",onclick:onRevealButtonClick,type:"button"},...Array.from(summary.childNodes)),{content:details,caption:summary});if(!isOpen){details.setAttribute("aria-hidden","true");summary.setAttribute("data-closed","");}return revealBtn;};processDomElementOnce("[data-is-disclosure",el=>{const summary=el.querySelector(".disclosureSummary");const details=el.querySelector(".disclosureDetails");if(!summary||!details){return;}const button=makeRevealButton(summary,details);if(!button){return;}add1(summary,button);});const{add:add2}=h;const processCallout=collapsiblesList=>{const captions=collapsiblesList.querySelectorAll("dt");captions.forEach(caption=>{const content=caption.nextElementSibling;const revealButton=makeRevealButton(caption,content);if(!revealButton){return;}caption.textContent="";add2(caption,revealButton);});};processDomElementOnce('[data-is="collapsible-list"]',processCallout);document.querySelectorAll(".glossarySearchJumpLinks a").forEach(link=>{const href=link.getAttribute("href")??"";if(!document.getElementById(href.replace("#",""))){link.classList.add("disabled");}});document.querySelectorAll(".glossarySearch form").forEach(form=>{form.addEventListener("submit",event=>{event.preventDefault();});});const{button:button3}=h;document.querySelectorAll(".mainSearch").forEach(searchWrapper=>{const selectedTermsContainer=searchWrapper.querySelector(".mainSearchSelectedTerms");if(!selectedTermsContainer){return;}const urlParams=new URLSearchParams(globalThis.location.search);const getRemoveButtonIdForInput=id=>`termButtonFor${id}`;const removeElementById=id=>{const button=document.getElementById(id);if(button){button.remove();}};const removeCategory=(categoryName,exceptValue="")=>{options.forEach(option=>{if(option.input.name===categoryName){option.input.checked=option.input.value===exceptValue;removeElementById(getRemoveButtonIdForInput(option.input.id));}});};const removeTerm=id=>{const input=document.getElementById(id);if(!input){return;}if(input.type==="radio"){removeCategory(input.name);}else if(input.type==="checkbox"){input.checked=false;}removeElementById(getRemoveButtonIdForInput(id));};const addTerm=(id,name,labelText)=>{selectedTermsContainer.append(button3({id:getRemoveButtonIdForInput(id),class:`button-${name}`,type:"button",onclick:()=>removeTerm(id)},labelText));};const onInputChange=evt=>{const input=evt.target;const name=input.name;const checked=input.checked;const label=input.parentElement?.querySelector(`label[for=${input.id}]`);const labelText=label?.textContent??"";if(input.value===""){removeCategory(name);}else if(input.type==="radio"||input.type==="checkbox"){if(checked){if(input.type==="radio"){removeCategory(input.name,input.value);}addTerm(input.id,name,labelText);}else{removeTerm(input.id);}}};const options=Array.from(searchWrapper.querySelectorAll([".mainSearchFiltersCategory label",".mainSearchFiltersFormat label",".mainSearchFiltersGodotVersion label",".mainSearchFiltersSubjectTags label"].join(","))).reduce((arr,label)=>{const input=document.getElementById(label.htmlFor);if(!input){return arr;}input.addEventListener("change",onInputChange);if(input.value!==""&&urlParams.getAll(input.name).indexOf(input.value)!==-1){input.checked=true;addTerm(input.id,input.name,label.textContent??"");}arr.push({label,input});return arr;},[]);document.querySelector(".mainSearchFiltersSubjectTagsClearLink")?.addEventListener("click",()=>{options.forEach(option=>{if(option.input.type==="checkbox"){removeTerm(option.input.id);}});});document.querySelector(".mainSearchSelectedTermsClearAllButton")?.addEventListener("click",()=>{options.forEach(option=>{removeTerm(option.input.id);});});});const{add:add3,button:button4,div,span:span2}=h;function setPasswordButtonText(text){this.buttonLabel.textContent=text;}function onPasswordButtonClick(_event){const controlId=this.getAttribute("aria-controls");const element=document.querySelector(`#${controlId}`);if(!element){return;}const expanded=this.getAttribute("aria-expanded")==="false";element.type=expanded?"text":"password";this.setAttribute("aria-expanded",String(expanded));this.setText(expanded?"hide characters":"show characters");}processDomElementOnce('input[type="password"]',input=>{const id=input.getAttribute("id");if(!id){return;}const buttonLabel=span2(null,"show characters");const revealButton=Object.assign(button4({class:"passwordContainerRevealButton",ariaExpanded:"false",type:"button",ariaControls:id,onclick:onPasswordButtonClick},buttonLabel),{buttonLabel,setText:setPasswordButtonText});const container=div({class:["passwordContainer","inputContainer"]});input.parentElement?.insertBefore(container,input);add3(container,input,revealButton);});const{add:add4,button:button5,div:div1,span:span3}=h;const classPrefix1="userMessage";const container=div1({class:`${classPrefix1}sPane`});add4(document.body,div1({class:`${classPrefix1}s`},container));const addUserMessageElement=(id,message,type)=>{const popup=div1({role:"alert",ariaLive:"assertive",ariaAtomic:"true",id,class:[classPrefix1,`${classPrefix1}--${type}`]},div1(null,message),button5({ariaControls:id},span3(null,"Close")));add4(container,popup);};container.addEventListener("click",event=>{const target=event.target;if(target.tagName==="BUTTON"){const id=target.getAttribute("aria-controls");id&&userMessagesCollection().remove(id);}});container.addEventListener("animationend",event=>{const target=event.target;if(target.classList.contains(`${classPrefix1}Closing`)){target.remove();}});userMessagesCollection().entries().forEach(([id,{message,type}])=>addUserMessageElement(id,message,type));userMessagesCollection().onMessageAdded((id,{message,type})=>addUserMessageElement(id,message,type));userMessagesCollection().onMessageRemoved(id=>document.getElementById(id)?.classList.add(`${classPrefix1}Closing`));function initGridSlider(slider){const grid=slider.querySelector(".gridItemsList");const controls=slider.querySelector(".scrollingListControls");const prevButton=slider.querySelector(".scrollingListControlsPrevious");const nextButton=slider.querySelector(".scrollingListControlsNext");if(!grid||!controls||!prevButton||!nextButton){return;}let carouselWidth=0;let pages=0;let currentPage=0;const init=()=>{controls.removeAttribute("hidden");slider.classList.add("isScrolling");slider.ariaRoleDescription="carousel";prevButton.addEventListener("click",()=>navigate(-1));nextButton.addEventListener("click",()=>navigate(1));globalThis.addEventListener("resize",debounce(calculateDimensions));grid.addEventListener("scrollend",updateButtonState);calculateDimensions();};const calculateDimensions=()=>{carouselWidth=grid.offsetWidth;pages=Math.ceil(grid.scrollWidth/carouselWidth);currentPage=Math.floor(grid.scrollLeft/grid.offsetWidth);updateButtonState();navigateToPage(currentPage);};const navigate=direction=>{const nextPage=(currentPage+direction)%pages;navigateToPage(nextPage);};const navigateToPage=pageNumber=>{currentPage=pageNumber;grid.scrollLeft=pageNumber*carouselWidth;};const updateButtonState=()=>{prevButton.disabled=currentPage===0;nextButton.disabled=currentPage===pages-1;};init();}processDomElementOnce(".scrollingList",initGridSlider);document.querySelectorAll(".nodeFlashCardShuffler").forEach(element=>{const contentPane=element.querySelector(".nodeFlashCardShufflerContentPane");const buttons=element.querySelectorAll("button.nodeFlashCardShufflerButton");const grid=element.querySelector(".nodeFlashCardShufflerGrid");if(!contentPane||!grid){return;}const loadNewCards=()=>{contentPane.setAttribute("aria-busy","true");buttons.forEach(button=>button.setAttribute("disabled",""));setTimeout(()=>{contentPane.setAttribute("aria-busy","false");buttons.forEach(button=>button.removeAttribute("disabled"));grid.classList.add("slideIn");},3e3);};grid.addEventListener("animationend",()=>grid.classList.remove("slideIn"));buttons.forEach(button=>button.addEventListener("click",loadNewCards));});document.querySelectorAll(".itemSummaryBrowser").forEach(element=>{const randomButton=element.querySelector("button.itemSummaryBrowserRandomButton");randomButton?.addEventListener("click",()=>{element.setAttribute("aria-busy","true");setTimeout(()=>element.setAttribute("aria-busy","false"),1e3);});});processDomElementOnce(`form[data-is="mailingListCollector"]`,form=>{const messagesContainer=form.querySelector("[aria-live]");if(!messagesContainer){console.error(`there's no announcement field in this mailing list form`);return;}const messages=Array.from(messagesContainer.querySelectorAll("span"));if(messages.length<3){console.error(`missing message elements in this mailing list form`);return;}const[messageAlreadySubscribed,messageSuccess,messageError]=messages.map(element=>{const newElement=element.cloneNode(true);newElement.removeAttribute("aria-hidden");newElement.removeAttribute("hidden");newElement.textContent=element.textContent;element.remove();return()=>{messagesContainer.innerHTML="";messagesContainer.append(newElement);};});const jsonInput=form.querySelector('input[type="hidden"][name="json"]');if(jsonInput){jsonInput.value="true";}const onSubmit=autoFetchWhenSubmit({method:"POST",doDisableForm:true,doReEnableForm:false,callback:async(err,result)=>{if(err||!result){console.error(err,result);messageError();return;}const data=await result.json();switch(data.code){case 200:messageAlreadySubscribed();break;case 201:messageSuccess();break;default:messageError();}}});form.addEventListener("submit",onSubmit);});const classPrefix2="tableOfContents";const CLASS_ANCHOR_SCROLLED_PAST="isActive";const CLASS_CURRENT_LIST_ITEM="isCurrent";const CLASS_ANCHOR_LINK=classPrefix2+"Anchor";const CLASS_FOLD_UNFOLD_BUTTON=classPrefix2+"FoldUnfoldButton";const SIDEBAR_CLOSED_BODY_CLASS=`${classPrefix2}SideBarIsClosed`;const CLASS_SCROLLING_PANE=`${classPrefix2}Pane`;function setIsScrolledPast(isScrolledPast){if(isScrolledPast){this.classList.add(CLASS_ANCHOR_SCROLLED_PAST);}else{this.classList.remove(CLASS_ANCHOR_SCROLLED_PAST);}}function setIsCurrent(isCurrent){const parent=this.parentElement;if(isCurrent){parent.classList.add(CLASS_CURRENT_LIST_ITEM);scrollIntoViewIfPartiallyVisible(parent,this.scrollingParent);const revealButton=this.closestRevealButton;if(revealButton&&revealButton.getAttribute("aria-expanded")==="false"){revealButton.click();}}else{parent.classList.remove(CLASS_CURRENT_LIST_ITEM);}}const sortDomElementsByVerticalPosition=(a,b)=>(document.getElementById(a)?.getBoundingClientRect().top??0)-(document.getElementById(b)?.getBoundingClientRect().top??0);const getDirectChildButton=element=>{return element&&Array.from(element.children).find(child=>child.matches(`button.${CLASS_FOLD_UNFOLD_BUTTON}`));};processDomElementOnce('[data-is="article-toc"]',root=>{const headings=[];const headingsIds=[];const anchors=new Map;const scrollingParent=root.closest(`.${CLASS_SCROLLING_PANE}`);if(!scrollingParent){throw new Error("Scrolling parent not found");}const removeAllCurrent=()=>root.querySelectorAll(`.${CLASS_CURRENT_LIST_ITEM}`).forEach(el=>el.classList.remove(CLASS_CURRENT_LIST_ITEM));let suspendObserverUpdates=false;function anchorClicked(){removeAllCurrent();setIsCurrent.call(this,true);suspendObserverUpdates=true;onScrollStopped(()=>{suspendObserverUpdates=false;setIsCurrent.call(this,true);});}root.querySelectorAll(`a.${CLASS_ANCHOR_LINK}[href^="#"]`).forEach(anchor=>{const href=anchor.getAttribute("href");if(!href)return;const heading=document.querySelector(href);if(!heading)return;const id=href.slice(1);headingsIds.push(id);headings.push(heading);anchor.heading=heading;anchors.set(id,anchor);anchor.setIsScrolledPast=setIsScrolledPast;anchor.setIsCurrent=setIsCurrent;anchor.scrollingParent=scrollingParent;anchor.addEventListener("click",anchorClicked);});const revealButtons=new Set;anchors.forEach(anchor=>{let currentElement=anchor.parentElement;while(currentElement){const revealButton=getDirectChildButton(currentElement);if(revealButton!=null){anchor.closestRevealButton=revealButton;revealButtons.add(revealButton);return;}currentElement=currentElement.parentElement?.closest("li");}});const active=[];const observer=new IntersectionObserver(entries=>{entries.forEach(entry=>{if(entry.isIntersecting&&entry.intersectionRatio>0){active.push(entry.target.id);}else{const index=active.indexOf(entry.target.id);if(index>-1){active.splice(index,1);}}});if(active.length===0){return;}const primaryActiveId=active.sort(sortDomElementsByVerticalPosition).at(0);let reachedCurrent=false;if(suspendObserverUpdates===false){removeAllCurrent();}for(const[id,anchor]of anchors){if(reachedCurrent||id===primaryActiveId){if(id===primaryActiveId){reachedCurrent=true;anchor.setIsScrolledPast(true);if(suspendObserverUpdates===false){anchor.setIsCurrent(true);}}else{anchor.setIsScrolledPast(false);}}else{anchor.setIsScrolledPast(true);}}},{rootMargin:"0% 0% -10% 0%"});headings.forEach(h=>observer.observe(h));});processDomElementOnce(`#${classPrefix2}Wrapper button.${classPrefix2}ToggleButton`,button=>{const target=document.getElementById(button.getAttribute("aria-controls"));if(!target){return;}button.addEventListener("toggler-toggleshow",event=>{document.documentElement.classList.toggle(SIDEBAR_CLOSED_BODY_CLASS,event.isHidden);});const size=(getComputedStyle(target,":after")?.getPropertyValue("content")??"").slice(1,-1).trim();if(!size){if(globalThis.matchMedia("(max-width: 1430px)").matches){button.click();}}else if(size==="viewport-small"){button.click();}});function augmentTabList(tabList){let tabFocus=-1;const cache=new Map;const tabs=Array.from(tabList.querySelectorAll('a[href^="#"][role="tab"]')).reduce((tabs,tab,index)=>{const controlledId=tab.getAttribute("aria-controls");if(!controlledId||!tab.hash){return tabs;}const controlledElement=document.getElementById(controlledId);if(!controlledElement){return tabs;}if(tab.getAttribute("aria-selected")==="true"){tabFocus=index;}cache.set(tab.hash,index);tab.panel=controlledElement;tabs.push(tab);return tabs;},[]);const setCurrentTabFromFocus=()=>{const tab=tabs[tabFocus];if(!tab){return;}tabs.forEach(t=>{if(t==tab){return;}t.setAttribute("aria-selected","false");t.setAttribute("tabindex","-1");t.panel.setAttribute("aria-hidden","true");t.panel.setAttribute("hidden","true");});tab.setAttribute("aria-selected","true");tab.setAttribute("tabindex","0");tab.panel.setAttribute("aria-hidden","false");tab.panel.removeAttribute("hidden");};const tabNext=()=>tabFocus===tabs.length-1?0:tabFocus+1;const tabPrevious=()=>tabFocus===0?tabs.length-1:tabFocus-1;const setNewTabFocus=newFocus=>{if(newFocus===tabFocus){return;}tabs[tabFocus]?.setAttribute("tabindex","-1");tabFocus=newFocus;tabs[tabFocus]?.setAttribute("tabindex","0");tabs[tabFocus]?.focus();};tabList.addEventListener("keydown",e=>{if(e.key==="ArrowRight"||e.key==="ArrowLeft"){const newFocus=e.key==="ArrowRight"?tabNext():tabPrevious();setNewTabFocus(newFocus);}});function onHashChange(){const index=cache.get(location.hash);if(index==null){return;}tabFocus=index;setCurrentTabFromFocus();}if(tabFocus===-1){tabFocus=0;}globalThis.addEventListener("hashchange",onHashChange);setCurrentTabFromFocus();onHashChange();}processDomElementOnce('[role="tablist"]',augmentTabList);document.querySelectorAll('button[data-is="theme-toggle"]').forEach(button=>{button.addEventListener("click",()=>{const isDark=document.documentElement.classList.toggle("dark");localStorage.setItem("theme",isDark?"dark":"light");});});document.querySelectorAll("video[data-should-preload]").forEach(video=>{const condition=video.getAttribute("data-should-preload");switch(condition){case"onmouseenter":video.addEventListener("mouseenter",()=>{video.preload="auto";});break;}});document.querySelectorAll(".showWhenJSLoads").forEach(element=>element.removeAttribute("hidden"));document.querySelectorAll(".makeUsableWhenJSLoads").forEach(element=>element.style.removeProperty("pointer-events"));document.querySelectorAll("a").forEach(a=>a.getAttribute("href")==globalThis.location.pathname&&a.classList.add("active"));