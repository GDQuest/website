const params=new Proxy(new URLSearchParams(window.location.search),{get:(searchParams,prop)=>typeof prop==="string"&&searchParams.has(prop)?searchParams.get(prop):""});const{email,redirect_to}=params;if(email!=null&&email!==""){document.querySelectorAll('input[type="email"][name="email"]').forEach(input=>{if(input.value===""){input.value=email;}});}if(redirect_to!=null&&redirect_to!==""){document.querySelectorAll('input[type="hidden"][name="redirectTo"]').forEach(input=>{if(input.value===""){input.value=redirect_to;}});}function onEnhancedFormSubmit(event){event.preventDefault();const form=event.currentTarget;const formData=new FormData(form).entries().map(([key,value])=>[key,value+""]);const{email,password,passwordConfirm,redirectTo,action}=Object.fromEntries(formData);}document.querySelectorAll('form[data-is="form-enhanced"]').forEach(form=>form.addEventListener("submit",onEnhancedFormSubmit));const htmlBooleanAttributes=["allowfullscreen","async","autofocus","autoplay","checked","controls","default","defer","disabled","formnovalidate","inert","ismap","itemscope","loop","multiple","muted","nomodule","novalidate","open","playsinline","readonly","required","reversed","selected","shadowrootclonable","shadowrootdelegatesfocus","shadowrootserializable"];const htmlBooleanAttributesSet=new Set(htmlBooleanAttributes);const isHTMLBooleanAttribute=value=>htmlBooleanAttributesSet.has(value);const kebabize=str=>str.replace(/[A-Z]+(?![a-z])|[A-Z]/g,($,ofs)=>(ofs?"-":"")+$.toLowerCase());const createElementDom=(tagName,attributes,...children)=>{const element=document.createElement(tagName);attributes&&Object.entries(attributes).forEach(([k,v])=>{if(typeof v==="function"){const fn=v;if(k.startsWith("on")){const listener=fn;const event=k.slice(2).toLowerCase();element.addEventListener(event,listener);}else{fn(element,k);}}else if(k.startsWith("aria")){const property="aria-"+kebabize(k.slice(4));element.setAttribute(property,v+"");}else if(k.startsWith("data")){const property="data-"+kebabize(k.slice(4));element.setAttribute(property,v+"");}else if(k==="className"||k==="class"){const classValue=v;if(classValue==null||classValue===false){return;}if(Array.isArray(classValue)){const classes=classValue.flat(Infinity).filter(Boolean);element.classList.add(...classes);}else{if(classValue.includes(" ")){throw new Error("Invalid class name: "+v);}element.classList.add(v+"");}}else if(k==="props"){const propsValue=v;Object.entries(propsValue).forEach(([prop,value])=>{element[prop]=value;});}else if(v===false&&isHTMLBooleanAttribute(k)){return;}else{element.setAttribute(k,v+"");}});children&&children.map(c=>c!=null&&c!==false&&element.append(Array.isArray(c)?createElementDom(...c):typeof c==="string"||typeof c==="number"?document.createTextNode(c+""):typeof c==="function"?c(document.createTextNode(""),"textContent")??"":c));return element;};const createElementTemplate=(createElement,tagName,baseAttributes)=>{return(attributes,...children)=>{return createElement(tagName,baseAttributes!=null?{...baseAttributes,...attributes}:attributes,...children);};};const createElementsProxy=createElement=>{const cache=new Map;return new Proxy(createElement,{get(_target,prop){const tagName=prop.toString();if(cache.has(tagName)){return cache.get(tagName);}if(typeof tagName==="string"&&isValidHTMLTag(tagName)){const elementCreator=createElementTemplate(createElement,tagName);cache.set(tagName,elementCreator);return elementCreator;}return undefined;}});};const isValidHTMLTag=tagName=>{return typeof document!=="undefined"?document.createElement(tagName) instanceof HTMLElement:/^[a-z][a-z0-9-]*$/i.test(tagName);};const h=createElementsProxy(createElementDom);const add=(parent,...children)=>{children.flat(Infinity).forEach(child=>{if(child==null||child===false){return;}parent.append(child);});};const SKIP=Symbol("SKIP");const noOp=v=>v;const Signal=(value,{transform=noOp}={})=>{const listeners=new Set;const on=fn=>{listeners.add(fn);return signal;};const off=fn=>{listeners.delete(fn);return signal;};const set=newValue=>{const derivedValue=transform(newValue,value,SKIP);if(derivedValue===SKIP||derivedValue===value){return signal;}const oldValue=value;value=derivedValue;listeners.forEach(fn=>fn(value,oldValue));return signal;};const get=()=>value;const signal={on,off,set,get};return signal;};const pathRegex=/^(?:(?<protocol>\w+):\/)?\/*(?<dir>.+\/)?(?<filename>(?<basename>.+?)(?:\.(?<extension>\w+))?)$/;const getFileTypeFromExtension=extension=>{if(extension==null){return"directory";}switch(extension.toLowerCase()){case"gd":return"gdscript";case"tscn":return"scene";case"png":case"jpg":case"gif":return"image";case"ini":case"text":case"yaml":case"txt":return"text";default:return"file";}};const DEFAULT_REGEX_VALUES={protocol:"",dir:"",filename:"",basename:"",extension:""};const splitPathStringToParts=path=>{path=path.replace(/^\/+/,"");const{protocol:_protocol,dir,filename,basename,extension}=path.match(pathRegex)?.groups??DEFAULT_REGEX_VALUES;const dirname=dir!=null?dir.replace(/\/+$/,"").split("/"):[];const incomplete=typeof _protocol==="undefined";const protocol=_protocol??"res";const fullPath=[dir,filename].filter(Boolean);const href=[protocol,...dirname,filename].filter(Boolean);const fileType=getFileTypeFromExtension(extension);const parts={href,fullPath,dirname,filename,protocol,basename,extension,fileType,incomplete};return parts;};const debounce=(fn,delay=250)=>{let debounceTimeOut=null;return()=>{clearTimeout(debounceTimeOut);debounceTimeOut=setTimeout(()=>{fn();},delay);};};const MapSignal=(value,{transform=noOp}={})=>{const signal=Signal(value,{transform});const listenersForAdditions=new Set;const listenersForRemovals=new Set;const listenersForChange=new Set;const setItem=(key,value)=>{const oldData=signal.get();const newData={...oldData,[key]:value};signal.set(newData);if(!(key in oldData)){listenersForAdditions.forEach(fn=>fn(key,value));}else if(oldData[key]===value){return;}else{listenersForChange.forEach(fn=>fn(key,value,oldData[key]));}};const getItem=key=>signal.get()[key];const hasItem=key=>key in signal.get();const removeItem=key=>{const oldData=signal.get();if(!(key in oldData)){return;}const{[key]:_delete,...newData}=oldData;listenersForRemovals.forEach(fn=>fn(key,oldData[key]));signal.set(newData);};const onKeyAdded=fn=>listenersForAdditions.add(fn);const offKeyAdded=fn=>listenersForAdditions.delete(fn);const onKeyRemoved=fn=>listenersForRemovals.add(fn);const offKeyRemoved=fn=>listenersForRemovals.delete(fn);const onKeyChanged=fn=>listenersForChange.add(fn);const offKeyChanged=fn=>listenersForChange.delete(fn);return{...signal,setItem,getItem,hasItem,removeItem,onKeyAdded,offKeyAdded,onKeyRemoved,offKeyRemoved,onKeyChanged,offKeyChanged};};const LocalStorageSignalAdapter=(signal,localStorageKey)=>{const value=JSON.parse(localStorage.getItem(localStorageKey)||JSON.stringify(signal.get()));signal.set(value);signal.on(value=>localStorage.setItem(localStorageKey,JSON.stringify(value)));return signal;};const TYPE_SUCCESS="success";const TYPE_ERROR="error";const TYPE_INFO="info";const TYPE_WARNING="warning";const userMessagesCollection=(()=>{const signal=LocalStorageSignalAdapter(MapSignal({}),"__userMessages");const add=(type,message,id)=>{id=id||`usermessage-`+type+"-"+Math.random().toString(36).slice(2);signal.setItem(id,{message,type});return id;};const addSuccess=message=>add(TYPE_SUCCESS,message);const addError=message=>add(TYPE_ERROR,message);const addInfo=message=>add(TYPE_INFO,message);const addWarning=message=>add(TYPE_WARNING,message);const remove=id=>signal.removeItem(id);const get=id=>signal.getItem(id);const entries=()=>Object.entries(signal.get());return{add,addSuccess,addError,addInfo,addWarning,remove,get,entries,onMessageAdded:signal.onKeyAdded,onMessageRemoved:signal.onKeyRemoved};})();if(typeof window!=="undefined"){window.addMessage=userMessagesCollection.add;window.addSuccess=userMessagesCollection.addSuccess;window.addError=userMessagesCollection.addError;window.addInfo=userMessagesCollection.addInfo;window.addWarning=userMessagesCollection.addWarning;}const toURLParams=values=>(values instanceof FormData?Array.from(values.entries()):Object.entries(values)).map(([k,v])=>Array.isArray(v)?v.map(vv=>`${k}=${encodeURIComponent(vv)}`).join("&"):typeof v==="string"||typeof v==="number"?`${k}=${encodeURIComponent(v)}`:typeof v==="boolean"?`${k}=${v?"true":"false"}`:`${k}=${encodeURIComponent(JSON.stringify(v))}`).join("&");const disableForm=form=>{let length=form.elements.length;while(length--){const control=form.elements[length];if("disabled"in control){control.disabled=true;}}};const enableForm=form=>{let length=form.elements.length;while(length--){const control=form.elements[length];if("disabled"in control){control.disabled=false;}}};const handleSimpleFormSubmit=callback=>event=>{event.preventDefault();event.stopPropagation();const form=event.target;const action=form.getAttribute("action")||"";const formName=form.getAttribute("name")||"";const enctype=form.getAttribute("enctype")||"";const method=form.getAttribute("method")||"";const target=form.getAttribute("target")||"";const values=new FormData(form);const serialized={name:formName,action,method,values,enctype,target};callback(serialized,form);};const pickCorrectFetch=(type,serialized)=>{switch(type){case"json":{const json=JSON.stringify(serialized.values);return fetch(serialized.action,{method:serialized.method,body:json,headers:{"Content-Type":"application/json"}});}case"post":{if(serialized.enctype==="application/x-www-form-urlencoded"){const params=serialized.values?toURLParams(serialized.values):"";const url=`${serialized.action}${params?"?"+params:""}`;return fetch(url,{method:serialized.method,headers:{"Content-Type":serialized.enctype}});}break;}}return fetch(serialized.action,{method:serialized.method,body:serialized.values,headers:{"Content-Type":serialized.enctype}});};const defaultConfig={type:"post",classBusy:"busy",doDisableForm:true,callback:()=>{}};const autoFetchWhenSubmit=(config=defaultConfig)=>{const{type,classBusy,doDisableForm,callback}={...config,...defaultConfig};const useSerializedData=(serialized,form)=>{const promise=pickCorrectFetch(type,serialized);if(doDisableForm){disableForm(form);}if(classBusy!=null&&classBusy!=""){form.classList.add(classBusy);}promise.then(response=>{callback(null,response);}).catch(error=>{callback(error,null);}).finally(()=>{if(doDisableForm){enableForm(form);}if(classBusy!=null&&classBusy!=""){form.classList.remove(classBusy);}});};return handleSimpleFormSubmit(useSerializedData);};const getClampedRandomInt=(max,min=0)=>Math.floor(Math.random()*(max-min+1))+min;const{button,img,li,span,div,ul,a,pre,code,wbr}=h;const currentProps={ariaCurrent:"true",ariaDisabled:"true"};const timerTime=8e3;const setupCarousel=carouselWrapper=>{const slider=carouselWrapper.querySelector(".carouselSlidesList");if(!slider){return;}const slides=Array.from(slider.querySelectorAll(".carouselSlidesListSlide")).map(slide=>{const category=slide.querySelector("h4")?.textContent??"";const title=slide.querySelector("h2")?.textContent??"";const thumbnail=slide.querySelector("img")?.src??"";return{category,title,thumbnail};});const controller=(()=>{const liveRegion=carouselWrapper.querySelector(".carouselLiveRegion");let currentSlide=Math.ceil(slider.scrollLeft/slider.offsetWidth)%slides.length;const nextSlide=()=>updateSlider((currentSlide+1)%slides.length);const prevSlide=()=>updateSlider((currentSlide-1+slides.length)%slides.length);const updateSlider=nextSlide=>{if(nextSlide===currentSlide){return;}slideButtons[currentSlide]?.setCurrent(false);slideButtons[nextSlide]?.setCurrent(true);currentSlide=nextSlide;slider.scrollLeft=slider.offsetWidth*currentSlide;if(liveRegion){liveRegion.textContent=`Item ${currentSlide+1} of ${slides.length}`;}};return{nextSlide,prevSlide,updateSlider,get currentSlide(){return currentSlide;}};})();handlePause:{const isReduced=window.matchMedia(`(prefers-reduced-motion: reduce)`)!=null&&window.matchMedia(`(prefers-reduced-motion: reduce)`).matches===true;if(isReduced){break handlePause;}const pauseToggleButton=carouselWrapper.querySelector(".carouselControlsButtonPlayToggle");const pauseToggleButtonTextElement=pauseToggleButton?.querySelector("span");if(!pauseToggleButton||!pauseToggleButtonTextElement){break handlePause;}let pauseInterval=null;let pauseRequested=false;const setPauseButton=isPaused=>{if(!isPaused){pauseToggleButton.classList.remove("buttonPlay");pauseToggleButton.classList.add("buttonPause");pauseToggleButtonTextElement.textContent="Pause";}else{pauseToggleButtonTextElement.textContent="Play";pauseToggleButton.classList.remove("buttonPause");pauseToggleButton.classList.add("buttonPlay");}};const startTimer=()=>{clearInterval(pauseInterval);if(pauseRequested){return;}pauseInterval=setInterval(controller.nextSlide,timerTime);carouselWrapper.style.setProperty("--timer-time",`${8e3}ms`);carouselWrapper.style.setProperty("--timer-animation-name","carouselProgressAnimation");};const stopTimer=()=>{carouselWrapper.style.setProperty("--timer-time","0ms");carouselWrapper.style.setProperty("--timer-animation-name","none");clearInterval(pauseInterval);pauseInterval=null;};pauseToggleButton.addEventListener("click",()=>{if(!pauseRequested){setPauseButton(true);pauseRequested=true;stopTimer();}else{pauseRequested=false;setPauseButton(false);}});startTimer();setPauseButton(false);carouselWrapper.addEventListener("mouseenter",stopTimer);carouselWrapper.addEventListener("mouseleave",startTimer);carouselWrapper.addEventListener("focusin",stopTimer);carouselWrapper.addEventListener("focusout",startTimer);}const slideButtons=(()=>{const carouselSlidesNavigationContainer=carouselWrapper.querySelector(".carouselSlidesNavigation");if(!carouselSlidesNavigationContainer){return[];}const currentSlideAnnouncer=span({class:"carouselSlideButtonCurrentTextAnnouncer"},"(Current Slide)");const slideButtons=slides.map((slide,index)=>{const isCurrent=index===controller.currentSlide;const slideButton=button({class:"carouselSlidesNavigationButton",...isCurrent?currentProps:{}},span({class:"carouselSlidesNavigationButtonLabel"},span({class:"carouselSlidesNavigationButtonLabelCategory"},slide.category),span({class:"carouselSlidesNavigationButtonLabelTitle"},slide.title)),img({class:"carouselSlidesNavigationButtonThumbnail",src:slide.thumbnail,alt:"",ariaHidden:"true"}),isCurrent&&currentSlideAnnouncer);slideButton.addEventListener("click",()=>controller.updateSlider(index));carouselSlidesNavigationContainer.appendChild(li(null,slideButton));slideButton.setCurrent=isCurrent=>{if(isCurrent){slideButton.setAttribute("aria-current","true");slideButton.setAttribute("aria-disabled","true");slideButton.setAttribute("disabled","true");slideButton.append(currentSlideAnnouncer);}else{slideButton.removeAttribute("aria-current");slideButton.removeAttribute("aria-disabled");slideButton.removeAttribute("disabled");}};return slideButton;});return slideButtons;})();setupNextPrevButtons:{carouselWrapper.querySelector(".buttonPrevious")?.addEventListener("click",controller.prevSlide);carouselWrapper.querySelector(".buttonNext")?.addEventListener("click",controller.nextSlide);}};document.querySelectorAll("section.carouselWrapper").forEach(setupCarousel);const clapsOnPage=new Set;const claps=Signal(0);const clapped=Signal(0);claps.on(amount=>{const formattedAmount=formatNumber(amount);clapsOnPage.forEach(([total,abbreviated,bubble])=>{total.textContent=`${amount}`;abbreviated.textContent=formattedAmount;bubble.textContent=clapped.get()>0?`+${clapped.get()}`:"";});});function increase(){this.setAttribute("aria-pressed","true");clapped.set(clapped.get()+1);claps.set(claps.get()+1);this.label.appendChild(createConfetti());}function formatNumber(number=0){return number.toLocaleString("en-US",{maximumFractionDigits:2,notation:"compact",compactDisplay:"short"});}document.querySelectorAll("button.clapsButton").forEach(function processClapsButton(button){if(button.classList.contains("isJSProcessed")){return;}button.classList.add("isJSProcessed");const total=button.querySelector(".clapsButtonAmountTotal");const abbreviated=button.querySelector(".clapsButtonAmountAbbreviated");const bubble=button.querySelector(".clapsButtonBubble");const label=button.querySelector(".clapsButtonLabel");if(!total||!abbreviated||!bubble||!label){return;}clapsOnPage.add([total,abbreviated,bubble]);button.addEventListener("animationend",event=>{if(event.animationName==="clapTotal"){button.setAttribute("aria-pressed","false");}});button.label=label;button.addEventListener("click",increase);});const firstClapElement=clapsOnPage.values().next().value;if(firstClapElement){const[total]=firstClapElement;const amount=parseInt(total.textContent??"0",10);claps.set(amount);}const createConfetti=()=>{const randomRotationAngle=getClampedRandomInt(360)+"deg";const particlesContainer=document.createElement("span");particlesContainer.dataset.is="confetti";particlesContainer.addEventListener("animationend",()=>particlesContainer.remove());particlesContainer.style.transform=`rotate(${randomRotationAngle})`;let children=getClampedRandomInt(10,5);particlesContainer.classList.add(`has-${children+1}`);while(children-- >=0){const particle=document.createElement("span");particle.style.setProperty("--angle",getClampedRandomInt(25)+"deg");particle.style.setProperty("--destination",getClampedRandomInt(55,5)+"px");particlesContainer.appendChild(particle);}return particlesContainer;};function unclickButton(button){button.setAttribute("aria-pressed","false");}function onclipboardButtonClick(_event){const value=this.getAttribute("data-clipboard");const clipboard=value==="currentURL"||value==null?window.location.href:value;navigator.clipboard.writeText(clipboard);this.setAttribute("aria-pressed","true");setTimeout(()=>unclickButton(this),2e3);}const processClipboardButton=button=>{if(button.classList.contains("isJSProcessed")){return;}button.classList.add("isJSProcessed");button.addEventListener("click",onclipboardButtonClick);};document.querySelectorAll("button[data-is='clipboard-button']").forEach(processClipboardButton);const classPrefix="fileInText";const splitHTMLElementTextContent=holderElement=>{const pathStr=holderElement.textContent;if(pathStr==null||pathStr===""){holderElement.remove();return;}const fileOnly=holderElement.dataset["fileOnly"]==="true";const pathParts=splitPathStringToParts(pathStr);let recipient=holderElement;if(fileOnly){const label=span({class:`${classPrefix}Label`},pathParts.filename);holderElement.textContent="";recipient=span({class:`${classPrefix}Tooltip`});add(holderElement,label,recipient);}recipient.textContent="";holderElement.classList.add(`${classPrefix}-${pathParts.fileType}`);add(recipient,span({class:`${classPrefix}Protocol`},pathParts.protocol),span({class:`${classPrefix}Slash`},"://"),pathParts.dirname.length>0?pathParts.dirname.map(chunk=>[span({class:`${classPrefix}Directory`},chunk),span({class:`${classPrefix}Slash`},"/"),wbr()]):undefined,pathParts.filename&&span({class:`${classPrefix}File`},pathParts.filename));};document.querySelectorAll('[data-is="file-in-text"]').forEach(splitHTMLElementTextContent);document.querySelectorAll(".codeBlockFileName").forEach(splitHTMLElementTextContent);const wasProcessedClass="isJSProcessed";function onRevealButtonClick(){const shouldOpen=this.getAttribute("aria-expanded")!=="true";if(shouldOpen){this.setAttribute("aria-expanded","true");this.content.removeAttribute("aria-hidden");this.caption.removeAttribute("data-closed");}else{this.setAttribute("aria-expanded","false");this.content.setAttribute("aria-hidden","true");this.caption.setAttribute("data-closed","");}}const makeRevealButton=(summary,details)=>{if(!details||!summary){return;}const id=details.id||`collapsible-${Math.random().toString(36).slice(2)}`;if(!details.id){details.id=id;}const isOpen=summary.hasAttribute("data-open")&&summary.getAttribute("data-open")==="true";const revealBtn=Object.assign(button({class:"collapsibleRevealButton",ariaExpanded:isOpen?"true":"false",ariaControls:id,ariaLabel:"Toggle content",onclick:onRevealButtonClick,type:"button"},...Array.from(summary.childNodes)),{content:details,caption:summary});if(!isOpen){details.setAttribute("aria-hidden","true");summary.setAttribute("data-closed","");}return revealBtn;};document.querySelectorAll("[data-is-disclosure").forEach(el=>{if(el.classList.contains(wasProcessedClass)){return;}el.classList.add(wasProcessedClass);const summary=el.querySelector(".disclosureSummary");const details=el.querySelector(".disclosureDetails");if(!summary||!details){return;}const button=makeRevealButton(summary,details);if(!button){return;}add(summary,button);});const wasProcessedClass1="isJSProcessed";const processCallout=collapsiblesList=>{if(collapsiblesList.classList.contains(wasProcessedClass1)){return;}collapsiblesList.classList.add(wasProcessedClass1);const captions=collapsiblesList.querySelectorAll("dt");captions.forEach(caption=>{const content=caption.nextElementSibling;const revealButton=makeRevealButton(caption,content);if(!revealButton){return;}caption.textContent="";add(caption,revealButton);});};document.querySelectorAll('[data-is="collapsible-list"]').forEach(processCallout);let currentFontSize=15;const setBaseFontSize=size=>{currentFontSize=size;document.documentElement.style.setProperty("--base-font-size",`${size}px`);};const increaseFontSize=()=>setBaseFontSize(currentFontSize+1);const decreaseFontSize=()=>setBaseFontSize(currentFontSize-1);const resetFontSize=()=>setBaseFontSize(15);document.querySelectorAll(".fontSizeResizer").forEach(element=>{const increaseButton=element.querySelector(".fontSizeResizerIncrease");const decreaseButton=element.querySelector(".fontSizeResizerDecrease");const resetButton=element.querySelector(".fontSizeResizerReset");if(!increaseButton||!decreaseButton||!resetButton){return;}increaseButton.addEventListener("click",increaseFontSize);decreaseButton.addEventListener("click",decreaseFontSize);resetButton.addEventListener("click",resetFontSize);});document.querySelectorAll(".glossarySearchJumpLinks a").forEach(link=>{const href=link.getAttribute("href")??"";if(!document.getElementById(href.replace("#",""))){link.classList.add("disabled");}});document.querySelectorAll(".glossarySearch form").forEach(form=>{form.addEventListener("submit",event=>{event.preventDefault();});});document.querySelectorAll(".mainSearch").forEach(searchWrapper=>{const selectedTermsContainer=searchWrapper.querySelector(".mainSearchSelectedTerms");if(!selectedTermsContainer){return;}const urlParams=new URLSearchParams(window.location.search);const getRemoveButtonIdForInput=id=>`termButtonFor${id}`;const removeElementById=id=>{const button=document.getElementById(id);if(button){button.remove();}};const removeCategory=(categoryName,exceptValue="")=>{options.forEach(option=>{if(option.input.name===categoryName){option.input.checked=option.input.value===exceptValue;removeElementById(getRemoveButtonIdForInput(option.input.id));}});};const removeTerm=id=>{const input=document.getElementById(id);if(!input){return;}if(input.type==="radio"){removeCategory(input.name);}else if(input.type==="checkbox"){input.checked=false;}removeElementById(getRemoveButtonIdForInput(id));};const addTerm=(id,name,labelText)=>{selectedTermsContainer.append(button({id:getRemoveButtonIdForInput(id),class:`button-${name}`,type:"button",onclick:()=>removeTerm(id)},labelText));};const onInputChange=evt=>{const input=evt.target;const name=input.name;const checked=input.checked;const label=input.parentElement?.querySelector(`label[for=${input.id}]`);const labelText=label?.textContent??"";if(input.value===""){removeCategory(name);}else if(input.type==="radio"||input.type==="checkbox"){if(checked){if(input.type==="radio"){removeCategory(input.name,input.value);}addTerm(input.id,name,labelText);}else{removeTerm(input.id);}}};const options=Array.from(searchWrapper.querySelectorAll([".mainSearchFiltersCategory label",".mainSearchFiltersFormat label",".mainSearchFiltersGodotVersion label",".mainSearchFiltersSubjectTags label"].join(","))).reduce((arr,label)=>{const input=document.getElementById(label.htmlFor);if(!input){return arr;}input.addEventListener("change",onInputChange);if(input.value!==""&&urlParams.getAll(input.name).indexOf(input.value)!==-1){input.checked=true;addTerm(input.id,input.name,label.textContent??"");}arr.push({label,input});return arr;},[]);document.querySelector(".mainSearchFiltersSubjectTagsClearLink")?.addEventListener("click",()=>{options.forEach(option=>{if(option.input.type==="checkbox"){removeTerm(option.input.id);}});});document.querySelector(".mainSearchSelectedTermsClearAllButton")?.addEventListener("click",()=>{options.forEach(option=>{removeTerm(option.input.id);});});});function setPasswordButtonText(text){this.buttonLabel.textContent=text;}function onPasswordButtonClick(){const controlId=this.getAttribute("aria-controls");const element=document.querySelector(`#${controlId}`);if(!element){return;}const expanded=this.getAttribute("aria-expanded")==="false";element.type=expanded?"text":"password";this.setAttribute("aria-expanded",String(expanded));this.setText(expanded?"hide characters":"show characters");}document.querySelectorAll('input[type="password"]').forEach(input=>{const id=input.getAttribute("id");if(input.classList.contains("isJSProcessed")||!id){return;}input.classList.add("isJSProcessed");const buttonLabel=span(null,"show characters");const revealButton=Object.assign(button({class:"passwordContainerRevealButton",ariaExpanded:"false",type:"button",ariaControls:id,onclick:onPasswordButtonClick},buttonLabel),{buttonLabel,setText:setPasswordButtonText});const container=div({class:["passwordContainer","inputContainer"]});input.parentElement?.insertBefore(container,input);add(container,input,revealButton);});const classPrefix1="userMessage";const container=div({class:`${classPrefix1}sPane`});add(document.body,div({class:`${classPrefix1}s`},container));const addUserMessageElement=(id,message,type)=>{const popup=div({role:"alert",ariaLive:"assertive",ariaAtomic:"true",id,class:[classPrefix1,`${classPrefix1}--${type}`]},div(null,message),button({ariaControls:id},span(null,"Close")));add(container,popup);};container.addEventListener("click",event=>{const target=event.target;if(target.tagName==="BUTTON"){const id=target.getAttribute("aria-controls");id&&userMessagesCollection.remove(id);}});container.addEventListener("animationend",event=>{const target=event.target;if(target.classList.contains(`${classPrefix1}Closing`)){target.remove();}});userMessagesCollection.entries().forEach(([id,{message,type}])=>addUserMessageElement(id,message,type));userMessagesCollection.onMessageAdded((id,{message,type})=>addUserMessageElement(id,message,type));userMessagesCollection.onMessageRemoved(id=>document.getElementById(id)?.classList.add(`${classPrefix1}Closing`));function initGridSlider(slider){if(slider.classList.contains("isJSProcessed")){return;}slider.classList.add("isJSProcessed");const grid=slider.querySelector(".gridItemsList");const controls=slider.querySelector(".scrollingListControls");const prevButton=slider.querySelector(".scrollingListControlsPrevious");const nextButton=slider.querySelector(".scrollingListControlsNext");if(!grid||!controls||!prevButton||!nextButton){return;}let carouselWidth=0;let pages=0;let currentPage=0;const init=()=>{controls.removeAttribute("hidden");slider.classList.add("isScrolling");slider.ariaRoleDescription="carousel";prevButton.addEventListener("click",()=>navigate(-1));nextButton.addEventListener("click",()=>navigate(1));window.addEventListener("resize",debounce(calculateDimensions));grid.addEventListener("scrollend",updateButtonState);calculateDimensions();};const calculateDimensions=()=>{carouselWidth=grid.offsetWidth;pages=Math.ceil(grid.scrollWidth/carouselWidth);currentPage=Math.floor(grid.scrollLeft/grid.offsetWidth);updateButtonState();navigateToPage(currentPage);};const navigate=direction=>{const nextPage=(currentPage+direction)%pages;navigateToPage(nextPage);};const navigateToPage=pageNumber=>{currentPage=pageNumber;grid.scrollLeft=pageNumber*carouselWidth;};const updateButtonState=()=>{prevButton.disabled=currentPage===0;nextButton.disabled=currentPage===pages-1;};init();}document.querySelectorAll(".scrollingList").forEach(initGridSlider);document.querySelectorAll(".nodeFlashCardShuffler").forEach(element=>{const contentPane=element.querySelector(".nodeFlashCardShufflerContentPane");const buttons=element.querySelectorAll("button.nodeFlashCardShufflerButton");const grid=element.querySelector(".nodeFlashCardShufflerGrid");if(!contentPane||!grid){return;}const loadNewCards=()=>{contentPane.setAttribute("aria-busy","true");buttons.forEach(button=>button.setAttribute("disabled",""));setTimeout(()=>{contentPane.setAttribute("aria-busy","false");buttons.forEach(button=>button.removeAttribute("disabled"));grid.classList.add("slideIn");},3e3);};grid.addEventListener("animationend",()=>grid.classList.remove("slideIn"));buttons.forEach(button=>button.addEventListener("click",loadNewCards));});document.querySelectorAll(".itemSummaryBrowser").forEach(element=>{const randomButton=element.querySelector("button.itemSummaryBrowserRandomButton");randomButton?.addEventListener("click",()=>{element.setAttribute("aria-busy","true");setTimeout(()=>element.setAttribute("aria-busy","false"),1e3);});});class ToggleShowEvent extends Event{isShown;controls;isHidden;constructor(isShown,controls,eventInitDict){super("toggler-toggleshow",eventInitDict);this.isShown=isShown;this.controls=controls;this.controls=controls;this.isHidden=!isShown;}}function toggleButton(){const expanded=this.getAttribute("aria-expanded")==="true";this.setAttribute("aria-expanded",expanded?"false":"true");const targetElementID=this.getAttribute("aria-controls");const targetElement=targetElementID?document.getElementById(targetElementID):null;if(!targetElement){return;}const targetToggledClassName=this.getAttribute("data-toggled-class");if(targetToggledClassName){if(expanded){targetElement.classList.remove(targetToggledClassName);}else{targetElement.classList.add(targetToggledClassName);}const event=new ToggleShowEvent(!expanded,targetElement);this.dispatchEvent(event);}}const processTogglerButton=button=>{if(!button||!(button.tagName==="BUTTON")||button.classList.contains("isJSProcessed")){return;}if(!button.getAttribute("data-toggled-class")){button.setAttribute("data-toggled-class","isToggled");}button.addEventListener("click",toggleButton);};const TogglerButton=(props,...children)=>{const toggleButton=button({ariaExpanded:"false",ariaLabel:"Toggle content",dataIs:"toggler-button",...props},...children);processTogglerButton(toggleButton);return toggleButton;};document.querySelectorAll("button[data-is='toggler-button']").forEach(processTogglerButton);const slugify=text=>text.toLowerCase().replace(/(\s|\.)+/g,"-");const sortElementsByPosition=(a,b)=>(document.getElementById(a)?.getBoundingClientRect().top??0)-(document.getElementById(b)?.getBoundingClientRect().top??0);const setOrUseId=element=>{const id=element.getAttribute("id");if(id!=null&&id!==""){return id;}const generatedId="h-"+slugify(element.innerText);element.setAttribute("id",generatedId);return generatedId;};const clickButtonIfFound=element=>{const button=element&&Array.from(element.children).find(child=>child.matches('button[aria-expanded="false"]'));if(button!=null){button.click();}};const CLASS_PREFIX="tableOfContents";const BUTTON_TEXT_CLOSED="unfold subreadings";const BUTTON_TEXT_OPEN="fold subreadings";const CLASS_HAS_CHILDREN="hasSubheadings";const CLASS_ANCHOR_SCROLLED_PAST="isActive";const CLASS_CURRENT_LIST_ITEM="isCurrent";const CLASS_SUBHEADINGS_LIST="SubheadingsList";const CLASS_SUBHEADINGS_LIST_CONTAINER="SubheadingsContainer";const CLASS_ANCHOR_LINK="Anchor";const CLASS_ANCHOR_LINK_LEVEL_PREFIX="AnchorLinkTo";const CLASS_LIST_ITEM="ListItem";const CLASS_LIST_ITEM_LEVEL_PREFIX="ItemLevel";const CLASS_FOLD_UNFOLD_BUTTON="FoldUnfoldButton";const processArticleToc=root=>{if(root.classList.contains("isJSProcessed")){return;}root.classList.add("isJSProcessed");let lastHeading=null;const headings=Array.from(document.querySelectorAll("main h1, main h2, .contributeBlockWrapper h1"));const headingIndicesById=headings.map(heading=>{const id=setOrUseId(heading);const level=parseInt(heading.tagName.replace("H",""),10);const text=heading.dataset["tocTitle"]||heading.textContent||"";const listItem=li({class:[CLASS_PREFIX+CLASS_LIST_ITEM_LEVEL_PREFIX+level,CLASS_PREFIX+CLASS_LIST_ITEM]},a({href:`#${id}`,class:[...Array.from(heading.classList).filter(c=>c.toLowerCase().includes("icon")),CLASS_PREFIX+CLASS_ANCHOR_LINK,CLASS_PREFIX+CLASS_ANCHOR_LINK_LEVEL_PREFIX+heading.tagName]},text));if(level===1){lastHeading=listItem;add(root,listItem);}else{if(lastHeading){if(lastHeading.tagName==="LI"){const divId=`hsub-${id}`;const revealButton=TogglerButton({ariaControls:divId,class:CLASS_PREFIX+CLASS_FOLD_UNFOLD_BUTTON},span({class:"whenNotToggled"},BUTTON_TEXT_CLOSED),span({class:"whenToggled"},BUTTON_TEXT_OPEN));const list=ul({class:CLASS_PREFIX+CLASS_SUBHEADINGS_LIST});const listWrapper=div({id:divId,class:CLASS_PREFIX+CLASS_SUBHEADINGS_LIST_CONTAINER},list);add(listWrapper,list);add(lastHeading,revealButton,listWrapper);lastHeading.classList.add(CLASS_HAS_CHILDREN);lastHeading=list;}lastHeading.appendChild(listItem);}}return id;}).reverse();const active=[];const observer=new IntersectionObserver(entries=>{entries.forEach(entry=>{if(entry.isIntersecting&&entry.intersectionRatio>0){active.push(entry.target.id);}else{const index=active.indexOf(entry.target.id);if(index>-1){active.splice(index,1);}}});if(active.length===0){return;}const last=active.sort(sortElementsByPosition).at(-1);let found=false;root.querySelectorAll(`.${CLASS_CURRENT_LIST_ITEM}`).forEach(el=>el.classList.remove(CLASS_CURRENT_LIST_ITEM));for(const id of headingIndicesById){if(found||id===last){found=true;const anchor=root.querySelector(`[href="#${id}"]`);if(!anchor){continue;}anchor.classList.add(CLASS_ANCHOR_SCROLLED_PAST);if(id===last){const li=anchor.parentElement;if(!li){continue;}li.classList.add(CLASS_CURRENT_LIST_ITEM);if(li.classList.contains(CLASS_HAS_CHILDREN)){clickButtonIfFound(li);}else{const parentLi=li.parentNode.closest("li");parentLi&&clickButtonIfFound(parentLi);}}}else{root.querySelector(`[href="#${id}"]`)?.classList.remove(CLASS_ANCHOR_SCROLLED_PAST);}}},{rootMargin:"0% 0% -10% 0%"});headings.forEach(h=>observer.observe(h));};document.querySelectorAll('[data-is="article-toc"]').forEach(processArticleToc);const processNavigationBehavior=button=>{if(!button||button.classList.contains("isNavJSProcessed")){return;}button.classList.add("isNavJSProcessed");button.addEventListener("toggler-toggleshow",event=>{document.documentElement.classList.toggle("tableOfContentsSideBarIsClosed",event.isHidden);});const mediaQuery=window.matchMedia("(max-width: 1760px)");if(mediaQuery.matches){button.click();}};document.querySelectorAll("#tableOfContents button.tableOfContentsToggleButton").forEach(processNavigationBehavior);function augmentTabList(tabList){if(tabList.classList.contains("isJSProcessed")){return;}tabList.classList.add("isJSProcessed");let tabFocus=-1;const cache=new Map;const tabs=Array.from(tabList.querySelectorAll('a[href^="#"][role="tab"]')).reduce((tabs,tab,index)=>{const controlledId=tab.getAttribute("aria-controls");if(!controlledId||!tab.hash){return tabs;}const controlledElement=document.getElementById(controlledId);if(!controlledElement){return tabs;}if(tab.getAttribute("aria-selected")==="true"){tabFocus=index;}cache.set(tab.hash,index);tab.panel=controlledElement;tabs.push(tab);return tabs;},[]);const setCurrentTabFromFocus=()=>{const tab=tabs[tabFocus];if(!tab){return;}tabs.forEach(t=>{if(t==tab){return;}t.setAttribute("aria-selected","false");t.setAttribute("tabindex","-1");t.panel.setAttribute("aria-hidden","true");t.panel.setAttribute("hidden","true");});tab.setAttribute("aria-selected","true");tab.setAttribute("tabindex","0");tab.panel.setAttribute("aria-hidden","false");tab.panel.removeAttribute("hidden");};const tabNext=()=>tabFocus===tabs.length-1?0:tabFocus+1;const tabPrevious=()=>tabFocus===0?tabs.length-1:tabFocus-1;const setNewTabFocus=newFocus=>{if(newFocus===tabFocus){return;}tabs[tabFocus]?.setAttribute("tabindex","-1");tabFocus=newFocus;tabs[tabFocus]?.setAttribute("tabindex","0");tabs[tabFocus]?.focus();};tabList.addEventListener("keydown",e=>{if(e.key==="ArrowRight"||e.key==="ArrowLeft"){const newFocus=e.key==="ArrowRight"?tabNext():tabPrevious();setNewTabFocus(newFocus);}});function onHashChange(){const index=cache.get(location.hash);if(index==null){return;}tabFocus=index;setCurrentTabFromFocus();}if(tabFocus===-1){tabFocus=0;}window.addEventListener("hashchange",onHashChange);setCurrentTabFromFocus();onHashChange();}document.querySelectorAll('[role="tablist"]').forEach(augmentTabList);document.querySelectorAll('button[data-is="theme-toggle"]').forEach(button=>{button.addEventListener("click",()=>{const isDark=document.documentElement.classList.toggle("dark");localStorage.setItem("theme",isDark?"dark":"light");});});document.querySelectorAll("video[data-should-preload]").forEach(video=>{const condition=video.getAttribute("data-should-preload");switch(condition){case"onmouseenter":video.addEventListener("mouseenter",()=>{video.preload="auto";});break;}});document.querySelectorAll(".showWhenJSLoads").forEach(element=>element.removeAttribute("hidden"));document.querySelectorAll(".makeUsableWhenJSLoads").forEach(element=>element.style.removeProperty("pointer-events"));document.querySelectorAll("a").forEach(a=>a.getAttribute("href")==window.location.pathname&&a.classList.add("active"));document.querySelectorAll("form[data-is-autofetch]").forEach(form=>{const onSubmit=autoFetchWhenSubmit({callback:(err,result)=>{if(err){console.error(err);return;}if(result){console.log(result);}}});form.addEventListener("submit",onSubmit);});